@page "/customers/create/"

@inject HttpClient _client
@inject NavigationManager _navManager

<h3 class="card-title">Add New Customer</h3>
<hr />
<br />

<EditForm Model="@customer" OnValidSubmit="CreateCustomer">
	<DataAnnotationsValidator />
	<ValidationSummary />

	<div class="form-group">
		<label>Tax ID:</label>
		<div>
			<InputText class="form-control" @bind-Value="@customer.TaxId" />
			<ValidationMessage For="@(() => customer.TaxId)" />
		</div>
	</div>
	<div class="form-group">
		<label>Contact Number:</label>
		<div>
			<InputText class="form-control" @bind-Value="@customer.ContactNumber" />
			<ValidationMessage For="@(() => customer.ContactNumber)" />
		</div>
	</div>
	<div class="form-group">
		<label>Email Address:</label>
		<div>
			<InputText class="form-control" @bind-Value="@customer.EmailAddress" />
			<ValidationMessage For="@(() => customer.EmailAddress)" />
		</div>
	</div>
	<div class="form-group">
		<label>Address:</label>
		<div>
			<InputTextArea class="form-control" @bind-Value="@customer.Address" />
			<ValidationMessage For="@(() => customer.Address)" />
		</div>
	</div>


	<br />
	<button type="submit" class="btn btn-success">
		Add Customer
	</button>


</EditForm>


@code {
	Customer customer = new Customer();

	protected async override Task OnInitializedAsync()
	{

	}

	private async Task CreateCustomer()
	{
		await _client.PostAsJsonAsync(Endpoints.CustomersEndpoint, customer);
		_navManager.NavigateTo("/customers/");
	}

}